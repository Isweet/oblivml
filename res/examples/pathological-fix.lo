(** This file demonstrates a fix to the pathology in the type system.

    The revelation on line 12 fails to typecheck, but the actual
    revelation on line 16 is safe because `v` is uniformly distributed. *)

(* `s` is our secret *)
let s = true<secret, _|_> in
(* `r0` and `r1` are two coin flips *)
let (r0, r1) = (flip<secret, `r0>, flip<secret, `r1>) in
let r0_s = use(r0) in
let r0_nu = trust(r0) in
let r1_nu = trust(r1) in
(* The muxes depend on `s`, but at the end of both muxes `v` = `r0` always *)
let g = s && r0_s in
let (v1, v2) = mux (g, r0_nu, r1_nu) in
let (v, _) = mux (g, v1, v2) in
(* Revealing is safe, since `v` = `r0` *)
let v_u = prove(v) in
reveal(v_u)
